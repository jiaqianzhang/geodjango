services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:rw  # Changed to rw
      - ./certbot/www:/var/www/certbot:rw    # Changed to rw
      - ./certbot/conf:/etc/letsencrypt:rw   # Changed to rw
    depends_on:
      - awm_django_app
    networks:
      - geodjango_tutorial

  pgadmin4:
    image: dpage/pgadmin4
    ports:
      - "20080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: docker@example.com
      PGADMIN_DEFAULT_PASSWORD: docker
    volumes:
      - my_pgadmin4_data:/var/lib/pgadmin4
    depends_on:
      - postgis
    networks:
      - geodjango_tutorial

  awm_django_app:
    image: geodjango_tutorial
    build: .
    environment:
      - GDAL_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/libgdal.so
      - GEOS_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/libgeos_c.so
      - GDAL_DATA=/usr/share/gdal
      - PROJ_LIB=/usr/share/proj
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_HOST=postgis
      - DJANGO_ALLOWED_HOSTS=jiaqianzhang.site,www.jiaqianzhang.site,localhost,127.0.0.1
      - DJANGO_DEBUG=1  # Set to 1 temporarily for debugging
      - PYTHONUNBUFFERED=1  # This ensures Python output isn't buffered
    volumes:
      - .:/app
    ports:
      - "8001:8001"
    depends_on:
      postgis:
        condition: service_healthy  # Add this back but with proper PostgreSQL health check
    command: >
      bash -c "
        echo 'Waiting for PostgreSQL...' &&
        while ! nc -z postgis 5432; do
          sleep 1
        done &&
        echo 'PostgreSQL is up!' &&
        conda run -n env python manage.py migrate &&
        conda run -n env python manage.py runserver 0.0.0.0:8001
      "
    networks:
      - geodjango_tutorial

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot:rw
      - ./certbot/conf:/etc/letsencrypt:rw
    command: renew --noninteractive --webroot --webroot-path=/var/www/certbot
    depends_on:
      - nginx
    networks:
      - geodjango_tutorial


volumes:
  my_pgadmin4_data: {}
  postgres_data: {}

networks:
  geodjango_tutorial:
    # external: true

