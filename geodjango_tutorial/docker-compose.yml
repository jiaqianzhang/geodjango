
    # volumes:
    #   - ./nginx/conf.d:/etc/nginx/conf.d
    #   - ./certbot/www:/var/www/certbot
    #   - ./certbot/conf:/etc/nginx/certs     # Mount the certs directory
    # depends_on:
    #   - pgadmin4
    #   - postgis
    #   - awm_django_app
    # networks:
    #   - geodjango_tutorial
services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    user: root  # Temporarily add this to debug permissions
    depends_on:
      - awm_django_app

  pgadmin4:
    image: dpage/pgadmin4
    ports:
      - "20080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: docker@example.com
      PGADMIN_DEFAULT_PASSWORD: docker
    volumes:
      - my_pgadmin4_data:/var/lib/pgadmin4
    depends_on:
      - postgis
    networks:
      - geodjango_tutorial

  postgis:
    image: kartoza/postgis
    ports:
      - "25432:5432"
    environment: 
      POSTGRES_DB: postgis
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - my_first_spatialdb_data:/var/lib/postgresql
    networks:
      - geodjango_tutorial

  awm_django_app:
    image: geodjango_tutorial
    build: .
    environment:
      - PROJ_LIB=/opt/conda/envs/env/share/proj
    volumes:
      - .:/app
    ports:
      - "8001:8001"
    depends_on:
      - postgis
    command: >
      sh -c "while ! nc -z postgis 5432; do sleep 1; done; 
      python manage.py runserver 0.0.0.0:8001"
    networks:
      - geodjango_tutorial

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - nginx
volumes:
  my_pgadmin4_data: {}
  my_first_spatialdb_data: {}

networks:
  geodjango_tutorial:
